package isf.dto;

import isf.UTILS.ExcelConstants;
import java.util.ArrayList;

// Referenced classes of package isf.dto:
//            ColumnProperties, ColumnMembers

public class ColumnMapping
{

    public static final ArrayList headers;
    public static final ArrayList textProps;
    public static final ArrayList photoProps;

    public ColumnMapping()
    {
    }

    static 
    {
        textProps = new ArrayList();
        photoProps = new ArrayList();
        headers = new ArrayList();
        headers.add("Title");
        headers.add("Description");
        headers.add("Keywords");
        headers.add("Geographical Coverage");
        headers.add("Geographic subject (city or populated place)");
        headers.add("Geographic subject (country)");
        headers.add("Temporal Coverage");
        headers.add("Creator");
        headers.add("Contributor");
        headers.add("Publisher (of the digital version)");
        headers.add("Date created");
        headers.add("Type");
        headers.add("Format");
        headers.add("Language");
        headers.add("Identifier");
        headers.add("Part of collection");
        headers.add("Part of subcollection");
        headers.add("Relation");
        headers.add("Text Division");
        headers.add("Rights");
        headers.add("Repository name");
        headers.add("Repository address");
        headers.add("Repository email");
        headers.add("Cataloger");
        headers.add("Catalog date");
        headers.add("Filename");
        headers.add("Directory");
        ArrayList textC1 = new ArrayList();
        ColumnProperties tx11 = new ColumnProperties("[Text Descriptive Title:]", "getTextDescriptiveTitle");
        ColumnProperties tx12 = new ColumnProperties("[Main Text or Publication Number:]", "getMainTextOrPublcnNo");
        ColumnProperties tx13 = new ColumnProperties("[Alternate Text Title:]", "getAltTextTitle");
        textC1.add(tx11);
        textC1.add(tx12);
        textC1.add(tx13);
        ColumnMembers tx1 = new ColumnMembers(false, false, textC1);
        textProps.add(tx1);
        ArrayList textC2 = new ArrayList();
        ColumnProperties tx21 = new ColumnProperties("[Text Description:]", "getTextDescription");
        ColumnProperties tx22 = new ColumnProperties("[Text or Publication Number Note:]", "getTextOrPublcnNoNote");
        ColumnProperties tx23 = new ColumnProperties("[Excavation Description:]", "getExcavationDescription");
        ColumnProperties tx24 = new ColumnProperties("[Medium:]", "getMedium");
        ColumnProperties tx25 = new ColumnProperties("[Script Note:]", "getScriptNote");
        ColumnProperties tx26 = new ColumnProperties("[Physical Object Description:]", "getPhysicalObjectDescription");
        ColumnProperties tx27 = new ColumnProperties("[Physical Object Note:]", "getPhysicalObjectNote");
        textC2.add(tx21);
        textC2.add(tx22);
        textC2.add(tx23);
        textC2.add(tx24);
        textC2.add(tx25);
        textC2.add(tx26);
        textC2.add(tx27);
        ColumnMembers tx2 = new ColumnMembers(false, false, textC2);
        textProps.add(tx2);
        ArrayList textC3 = new ArrayList();
        ColumnProperties tx3 = new ColumnProperties("[Keywords or Phrases:]", "getKeywordsOrPhrases");
        textC3.add(tx3);
        ColumnMembers tx3a = new ColumnMembers(false, false, textC3);
        textProps.add(tx3a);
        ArrayList textC4 = new ArrayList();
        ColumnProperties tx41 = new ColumnProperties("[ISF Find Site:]", "getISFFindSite");
        ColumnProperties tx42 = new ColumnProperties("[Ancient Structure:]", "getAncientStructure");
        ColumnProperties tx43 = new ColumnProperties("[Region:]", "getRegion");
        ColumnProperties tx44 = new ColumnProperties("[Geographical Coverage Note:]", "getGeographicalCoverageNote");
        ColumnProperties tx45 = new ColumnProperties("[Ancient City or Location:]", "getAncientCityOrLocation");
        textC4.add(tx41);
        textC4.add(tx42);
        textC4.add(tx43);
        textC4.add(tx44);
        textC4.add(tx45);
        ColumnMembers tx4 = new ColumnMembers(false, false, textC4);
        textProps.add(tx4);
        ArrayList textC5 = new ArrayList();
        ColumnProperties tx5 = new ColumnProperties("[Modern City or Location:]", "getModernCityOrLocation");
        textC5.add(tx5);
        ColumnMembers tx5a = new ColumnMembers(false, false, textC5);
        textProps.add(tx5a);
        ArrayList textC6 = new ArrayList();
        ColumnProperties tx6 = new ColumnProperties("[Modern Country:]", "getModernCountry");
        textC6.add(tx6);
        ColumnMembers tx6a = new ColumnMembers(false, false, textC6);
        textProps.add(tx6a);
        ArrayList textC7 = new ArrayList();
        ColumnProperties tx71 = new ColumnProperties("[Named Time Period:]", "getNamedTimePeriod");
        ColumnProperties tx72 = new ColumnProperties("[Date of Inscription Note:]", "getDateOfInscriptionNote");
        ColumnProperties tx73 = new ColumnProperties("[Relevant Time Line:]", "getRelevantTimeLine");
        textC7.add(tx71);
        textC7.add(tx72);
        textC7.add(tx73);
        ColumnMembers tx7 = new ColumnMembers(false, false, textC7);
        textProps.add(tx7);
        textProps.add(new ColumnMembers());
        textProps.add(new ColumnMembers());
        ArrayList textC10 = new ArrayList();
        ColumnProperties tx101 = new ColumnProperties(ExcelConstants.PUBLISHER, "literal");
        textC10.add(tx101);
        ColumnMembers tx10 = new ColumnMembers(false, false, textC10);
        textProps.add(tx10);
        textProps.add(new ColumnMembers());
        ArrayList textC12 = new ArrayList();
        ColumnProperties tx121 = new ColumnProperties("[Type of Item Catalogued:]", "getTypeOfItemCateloged");
        ColumnProperties tx122 = new ColumnProperties("[Text/Uninscribed/Glyptic:]", "getTextUninscribedArtifact");
        textC12.add(tx121);
        textC12.add(tx122);
        ColumnMembers tx12a = new ColumnMembers(false, false, textC12);
        textProps.add(tx12a);
        textProps.add(new ColumnMembers());
        ArrayList textC14 = new ArrayList();
        ColumnProperties tx141 = new ColumnProperties("[Language Note:]", "getLanguageNote");
        textC14.add(tx141);
        ColumnMembers tx14 = new ColumnMembers(false, false, textC14);
        textProps.add(tx14);
        ArrayList textC15 = new ArrayList();
        ColumnProperties tx151 = new ColumnProperties("[ISF Assigned Text Number:]", "getISFAssignedTextNo");
        ColumnProperties tx152 = new ColumnProperties("[Museum Accession Number:]", "getMuseumAccessionNo");
        ColumnProperties tx153 = new ColumnProperties("[Excavation Number:]", "getExcavationNo");
        textC15.add(tx151);
        textC15.add(tx152);
        textC15.add(tx153);
        ColumnMembers tx15 = new ColumnMembers(false, false, textC15);
        textProps.add(tx15);
        ArrayList textC16 = new ArrayList();
        ColumnProperties tx161 = new ColumnProperties("InscriptiFact: an image database of inscriptions and artifacts", "literal");
        textC16.add(tx161);
        ColumnMembers tx16 = new ColumnMembers(false, false, textC16);
        textProps.add(tx16);
        textProps.add(new ColumnMembers());
        ArrayList textC18 = new ArrayList();
        ColumnProperties tx181 = new ColumnProperties("[Is Part Of Corpus<N>:]", "getIsPartOfCorpus");
        ColumnProperties tx182 = new ColumnProperties("[Is Part Of Corpus<N> Category:]", "getIsPartOfCorpusCategory");
        ColumnProperties tx183 = new ColumnProperties("[Is Part Of Corpus<N> Sub-Category:]", "getIsPartOfCorpusSubcategory");
        textC18.add(tx181);
        textC18.add(tx182);
        textC18.add(tx183);
        ColumnMembers tx18 = new ColumnMembers(true, true, textC18);
        textProps.add(tx18);
        ArrayList textC19 = new ArrayList();
        ColumnProperties tx191 = new ColumnProperties("TEXTDIVISION", "getTextDivision");
        textC19.add(tx191);
        ColumnMembers tx19 = new ColumnMembers(false, false, textC19);
        textProps.add(tx19);
        ArrayList textC20 = new ArrayList();
        ColumnProperties tx201 = new ColumnProperties("[Rights Physical Object:]", "getRightsPhysicalObject");
        textC20.add(tx201);
        ColumnMembers tx20 = new ColumnMembers(false, false, textC20);
        textProps.add(tx20);
        ArrayList textC21 = new ArrayList();
        ColumnProperties tx211 = new ColumnProperties("[Location of Original:]", "getLocationOfOriginal");
        textC21.add(tx211);
        ColumnMembers tx21a = new ColumnMembers(false, false, textC21);
        textProps.add(tx21a);
        textProps.add(new ColumnMembers());
        textProps.add(new ColumnMembers());
        textProps.add(new ColumnMembers());
        textProps.add(new ColumnMembers());
        ArrayList textC26 = new ArrayList();
        ColumnProperties tx261 = new ColumnProperties("filename", "");
        textC26.add(tx261);
        ColumnMembers tx26a = new ColumnMembers(false, false, textC26);
        textProps.add(tx26a);
        ArrayList textC27 = new ArrayList();
        ColumnProperties tx271 = new ColumnProperties("directory", "");
        textC27.add(tx271);
        ColumnMembers tx27a = new ColumnMembers(false, false, textC27);
        textProps.add(tx27a);
        ArrayList photoC1 = new ArrayList();
        ColumnProperties px11 = new ColumnProperties("[Photo Descriptive Title:]", "getPhotoDescriptiveTitle");
        photoC1.add(px11);
        ColumnMembers px1 = new ColumnMembers(false, false, photoC1);
        photoProps.add(px1);
        ArrayList photoC2 = new ArrayList();
        ColumnProperties pc21 = new ColumnProperties("[Digital Object Type Note:]", "getDigitalObjectTypeNote");
        ColumnProperties pc22 = new ColumnProperties("[Photograph Description:]", "getPhotographDescription");
        ColumnProperties pc23 = new ColumnProperties("[Ancient Text Represented:]", "getAncientTextRepresented");
        ColumnProperties pc24a = new ColumnProperties("[ISF Assigned Text Number:]", "getISFAssignedTextNumber");
        ColumnProperties pc24 = new ColumnProperties("[Script Note:]", "getScriptNote");
        photoC2.add(pc21);
        photoC2.add(pc22);
        photoC2.add(pc23);
        photoC2.add(pc24a);
        photoC2.add(pc24);
        ColumnMembers px2 = new ColumnMembers(false, false, photoC2);
        photoProps.add(px2);
        photoProps.add(new ColumnMembers());
        ArrayList photoC4 = new ArrayList();
        ColumnProperties pc41 = new ColumnProperties("[ISF Find Site:]", "getISFFindSite");
        photoC4.add(pc41);
        ColumnMembers pc4 = new ColumnMembers(false, false, photoC4);
        photoProps.add(pc4);
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        ArrayList photoC8 = new ArrayList();
        ColumnProperties pc81 = new ColumnProperties("[Photographer:]", "getPhotographer");
        ColumnProperties pc82 = new ColumnProperties("[Digitization Equipment Specs:]", "getDigitizationEquipmentSpecs");
        photoC8.add(pc81);
        photoC8.add(pc82);
        ColumnMembers pc8 = new ColumnMembers(false, false, photoC8);
        photoProps.add(pc8);
        ArrayList photoC9 = new ArrayList();
        ColumnProperties pc91 = new ColumnProperties("[Collaborator:]", "getColaborator");
        photoC9.add(pc91);
        ColumnMembers pc9 = new ColumnMembers(false, false, photoC9);
        photoProps.add(pc9);
        photoProps.add(new ColumnMembers());
        ArrayList photoC11 = new ArrayList();
        ColumnProperties pc111 = new ColumnProperties("[Date of Photograph:]", "getDateOfPhotograph");
        ColumnProperties pc112 = new ColumnProperties("[Date of Digital Conversion:]", "getDateOfDigitalConversion");
        photoC11.add(pc111);
        photoC11.add(pc112);
        ColumnMembers pc11 = new ColumnMembers(false, false, photoC11);
        photoProps.add(pc11);
        ArrayList photoC12 = new ArrayList();
        ColumnProperties pc121 = new ColumnProperties("[Type of Item Catalogued:]", "getTypeOfItemCateloged");
        photoC12.add(pc121);
        ColumnMembers pc12 = new ColumnMembers(false, false, photoC12);
        photoProps.add(pc12);
        ArrayList photoC13 = new ArrayList();
        ColumnProperties pc131 = new ColumnProperties("[Archival File Resolution:]", "getArchivalFileResolution");
        ColumnProperties pc132 = new ColumnProperties("[Archival File Size:]", "getArchivalFileSize");
        ColumnProperties pc133 = new ColumnProperties("[Digital Object Format:]", "getDigitalObjectFormat");
        ColumnProperties pc134 = new ColumnProperties("[Film Type Code:]", "getFilmTypeCode");
        ColumnProperties pc135 = new ColumnProperties("[Magnification Code:]", "getMagnificationCode");
        ColumnProperties pc136 = new ColumnProperties("[Photo Dimensions:]", "getPhotoDimensions");
        photoC13.add(pc131);
        photoC13.add(pc132);
        photoC13.add(pc133);
        photoC13.add(pc134);
        photoC13.add(pc135);
        photoC13.add(pc136);
        ColumnMembers pc13 = new ColumnMembers(false, false, photoC13);
        photoProps.add(pc13);
        ArrayList photoC14 = new ArrayList();
        ColumnProperties pc141 = new ColumnProperties("[Language Note:]", "getLanguageNote");
        photoC14.add(pc141);
        ColumnMembers pc14 = new ColumnMembers(false, false, photoC14);
        photoProps.add(pc14);
        ArrayList photoC15 = new ArrayList();
        ColumnProperties pc151 = new ColumnProperties("[ISF Digital Object Identification Number:]", "getISFDigitalObjectIdentifier");
        ColumnProperties pc152 = new ColumnProperties("[Photograph Identification Number:]", "getPhotographIdentificationNo");
        ColumnProperties pc153 = new ColumnProperties("[Photo Museum Accession Number Note:]", "getPhotoMuseumAccessionNoNote");
        ColumnProperties pc154 = new ColumnProperties("[Photo Text or Publication Number Note:]", "getPhotoTextOrPublcnNoNote");
        photoC15.add(pc151);
        photoC15.add(pc152);
        photoC15.add(pc153);
        photoC15.add(pc154);
        ColumnMembers pc15 = new ColumnMembers(false, false, photoC15);
        photoProps.add(pc15);
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        ArrayList photoC18 = new ArrayList();
        ColumnProperties pc181 = new ColumnProperties("[Is Part of WSR Project:]", "getIsPartOfWSRProject");
        photoC18.add(pc181);
        ColumnMembers pc18 = new ColumnMembers(false, false, photoC18);
        photoProps.add(pc18);
        ArrayList photoC19 = new ArrayList();
        ColumnProperties pc191 = new ColumnProperties("[Text Division:]", "getTextDivision");
        photoC19.add(pc191);
        ColumnMembers pc19 = new ColumnMembers(false, false, photoC19);
        photoProps.add(pc19);
        ArrayList photoC20 = new ArrayList();
        ColumnProperties pc201 = new ColumnProperties("[Rights Digital Object:]", "getRightsDigitalObject");
        ColumnProperties pc202 = new ColumnProperties("[Rights Photographic Object:]", "getRightsPhotograph");
        ColumnProperties pc203 = new ColumnProperties("[Rights Physical Object:]", "getRightsPhysicalObject");
        ColumnProperties pc204 = new ColumnProperties("[Rights Publication Permission:]", "getRightsPublicationPermission");
        photoC20.add(pc201);
        photoC20.add(pc202);
        photoC20.add(pc203);
        photoC20.add(pc204);
        ColumnMembers pc20 = new ColumnMembers(false, false, photoC20);
        photoProps.add(pc20);
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        photoProps.add(new ColumnMembers());
        ArrayList photoC26 = new ArrayList();
        ColumnProperties pc261 = new ColumnProperties("filename", "");
        photoC26.add(pc261);
        ColumnMembers pc26a = new ColumnMembers(false, false, photoC26);
        photoProps.add(pc26a);
        ArrayList photoC27 = new ArrayList();
        ColumnProperties pc271 = new ColumnProperties("directory", "");
        photoC27.add(pc271);
        ColumnMembers pc27a = new ColumnMembers(false, false, photoC27);
        photoProps.add(pc27a);
    }
}
